id: brands
type: PageSiderMenu
properties:
  title: Brands

requests:
  - id: brands_table
    type: MongoDBAggregation # MongoDb Aggregation to get the table data
    connectionId: brands # Id of the connection defined in the lowdefy.yaml file
    properties:
      pipeline:
        - $match:
            archive:
              $ne: true # Match all documents that have not been archived
        - $sort:
            name: 1 # Sort alphabetically according to the name

mutations:
  - id: insert_brand
    type: MongoDBInsertOne # MongoDb insertOne mutation to write a new brand into the collection
    connectionId: brands
    properties:
      doc:
        _state: new_brand # Insert the entire new_brand object, which contains the brand name and description
  - id: update_brand
    type: MongoDBUpdateOne # MongoDb updateOne mutation to update the selected brand
    connectionId: brands
    properties:
      filter:
        _id:
          _state: edit_brand._id # Filter the document that matches the selected document's _id (which is nested in the edit_brand object)
      update:
        $set:
          _state: edit_brand # Update all the fields in the edit_brand object, which contains the brand name and description
  - id: delete_brand
    type: MongoDBDeleteOne # MongoDb deleteOne mutation to delete the selected brand's document from the collection
    connectionId: brands
    properties:
      filter:
        _id:
          _state: edit_brand._id # Filter the document that matches the selected document's _id

  # We created a new_brand object and an edit_brand object that both contain the brand info.
  # The reason for placing the brand info field in two separate objects instead of the root 
  # level of state is to make the mutation operations easier and to enable us to have two 
  # separate set of fields that capture the same information.

blocks:
  - id: brand_title # Create a Title block
    type: Title
    layout:
      grow: true # Set the block the left side of the page
    properties:
      content: Brands # The title's text
  - id: new_brand # Create a Button block for adding a new brand
    type: Button
    layout:
      shrink: true # Set the block the right side of the page
    properties:
      title: New Brand # Button text
      icon: PlusOutlined # Ant Design icon
      hideActionLoading: true # Hides the loading icon when the button is clicked
    actions:
      onClick: # A list of actions to complete when the button is clicked
        - id: reset_brand_info # Resets the fields in the new_brand object
          type: SetState
          params:
            new_brand:
              name: null
              description: null
        - id: open_new_drawer # Open the drawer which contains the input fields to add a new brand
          type: CallMethod
          params:
            blockId: new_brand_drawer # The block id of the drawer
            method: toggleOpen # The method that opens the drawer

  - id: brand_list # An agGrid table that lists all the brands
    type: AgGrid
    properties:
      defaultColDef: # Define default column definitions that apply to all the defined columns
        sortable: true # Enables sorting on the columns when the header is clicked
        resizable: true # Enables resizing of column widths
        filter: true # Enables filtering of the columns using agGrid's default filter
      rowData:
        _request: brands_table # Populate the table with our request that looks up the brands
      columnDefs: # Define all the columns
        - headerName: Name # Display name
          field: name # The field name in the data
          width: 200
        - headerName: Description
          field: description
          width: 400
    actions:
      onRowClick: # Define what happens when a row is clicked
        - id: set_edit_brand
          type: SetState
          params:
            edit_brand: 
              _id:
                _args: row._id # Call the row _args (the row data )to set the _id field in the edit_brand object equal the _id field of the selected row
              name:
                _args: row.name
              description:
                _args: row.description
        - id: open_edit_drawer # Open the drawer which contains the input fields to edit the selected brand
          type: CallMethod
          params:
            blockId: edit_brand_drawer
            method: toggleOpen

  - id: new_brand_drawer
    type: Drawer
    properties:
      title: New Brand
      width: 512px # Set the width of the drawer to be 512px
    layout:
      contentGutter: 16 # Set a gutter of 16px between all the blocks in the drawer
    blocks:
      - id: new_brand.name # A single line TextInput block to capture the new brand name
        type: TextInput
        properties:
          title: Name
          placeholder: Brand Name # Text to display inside the input box when nothing has been entered yet
      - id: new_brand.description
        type: TextInput
        properties:
          title: Description
          placeholder: Brand Description
      - id: insert_brand
        type: Button
        properties:
          title: Save
          icon: SaveOutlined
          block: true # Makes the button fill the maximum defined width instead of only the with of its contents (title and icon)
        actions:
          onClick:
            - id: insert_brand # Call the insert_brand mutation
              type: Mutate
              params: insert_brand
            - id: fetch_brands_table # Fetch the brands_table request again to show the newly created brand in the table
              type: Fetch
              params: brands_table
            - id: close_new_drawer # Close the new_brand drawer
              type: CallMethod
              params:
                blockId: new_brand_drawer
                method: setOpen  # The method that closes the drawer - set the open state of the drawer to false
                args:
                  open: false

  - id: edit_brand_drawer
    type: Drawer
    properties:
      title: New Brand
      width: 512px
    layout:
      contentGutter: 16
    blocks:
      - id: edit_brand.name
        type: TextInput
        properties:
          title: Name
          placeholder: Brand Name
      - id: edit_brand.description
        type: TextInput
        properties:
          title: Description
          placeholder: Brand Description
      - id: update_brand
        type: Button
        layout:
          span: 12 # Make the button span 2 half of the drawer's width
        properties:
          title: Save
          icon: SaveOutlined
          block: true
        actions:
          onClick:
            - id: update_brand
              type: Mutate
              params: update_brand
            - id: fetch_brands_table
              type: Fetch
              params: brands_table
            - id: close_drawer
              type: CallMethod
              params:
                blockId: edit_brand_drawer
                method: setOpen
                args:
                  open: false
      - id: delete_brand # Button for deleting the brand
        type: Button
        layout:
          span: 12
        properties:
          title: Delete
          icon: DeleteOutlined
          type: danger # Set the type of button to a danger button (which is red in color)
          block: true
        actions:
          onClick:
            - id: open_delete_modal # Open a pop up modal to confirm whether you want to delete the brand
              type: CallMethod
              params:
                blockId: delete_modal
                method: open
      - id: delete_modal
        type: ConfirmModal
        properties:
          content: Are you sure you want to delete this brand? # The text inside the modal
          okText: Yes # Change the default text of the ok button to 'Yes'
          okButton:
            type: danger # Change the default type of the ok button to danger
          cancelText: No # Change the default text of the cancel button to 'No'
        actions:
          onOk:
            - id: delete_brand
              type: Mutate
              params: delete_brand
            - id: fetch_brands_table
              type: Fetch
              params: brands_table
            - id: close_edit_drawer
              type: CallMethod
              params:
                blockId: edit_brand_drawer
                method: setOpen
                args:
                  open: false
